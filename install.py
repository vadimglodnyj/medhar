#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π –º–µ–¥–∏—á–Ω–æ–≥–æ –¥–æ–¥–∞—Ç–∫—É
"""

import sys
import os
import subprocess
import platform

def check_python_version():
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î –≤–µ—Ä—Å—ñ—é Python"""
    if sys.version_info < (3, 8):
        print("‚ùå –ü–æ—Ç—Ä—ñ–±–µ–Ω Python 3.8 –∞–±–æ –Ω–æ–≤—ñ—à–∏–π!")
        print(f"–ü–æ—Ç–æ—á–Ω–∞ –≤–µ—Ä—Å—ñ—è: {sys.version}")
        return False
    print(f"‚úÖ Python {sys.version_info.major}.{sys.version_info.minor}.{sys.version_info.micro}")
    return True

def install_core_packages():
    """–í—Å—Ç–∞–Ω–æ–≤–ª—é—î –æ—Å–Ω–æ–≤–Ω—ñ –ø–∞–∫–µ—Ç–∏ –ø–æ –æ–¥–Ω–æ–º—É"""
    print("üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –æ—Å–Ω–æ–≤–Ω–∏—Ö –ø–∞–∫–µ—Ç—ñ–≤...")
    
    # –°–ø–∏—Å–æ–∫ –æ—Å–Ω–æ–≤–Ω–∏—Ö –ø–∞–∫–µ—Ç—ñ–≤ –≤ –ø–æ—Ä—è–¥–∫—É –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
    packages = [
        "setuptools",
        "wheel", 
        "pip",
        "numpy",
        "Flask",
        "pandas",
        "python-docx",
        "docxtpl",
        "openpyxl",
        "Werkzeug",
        "requests",
        "beautifulsoup4",
        "python-dotenv"
    ]
    
    failed_packages = []
    
    for package in packages:
        try:
            print(f"üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è {package}...")
            result = subprocess.run([
                sys.executable, "-m", "pip", "install", 
                package, "--upgrade", "--no-cache-dir"
            ], check=True, capture_output=True, text=True)
            print(f"‚úÖ {package} –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ")
            
        except subprocess.CalledProcessError as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è {package}: {e}")
            if e.stderr:
                print(f"STDERR: {e.stderr}")
            failed_packages.append(package)
    
    if failed_packages:
        print(f"‚ö†Ô∏è  –ù–µ –≤–¥–∞–ª–æ—Å—è –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏: {', '.join(failed_packages)}")
        return False
    
    print("‚úÖ –í—Å—ñ –æ—Å–Ω–æ–≤–Ω—ñ –ø–∞–∫–µ—Ç–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
    return True

def install_optional_packages():
    """–í—Å—Ç–∞–Ω–æ–≤–ª—é—î –æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ –ø–∞–∫–µ—Ç–∏"""
    print("üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏—Ö –ø–∞–∫–µ—Ç—ñ–≤...")
    
    optional_packages = [
        "pdf2image",
        "pypdf", 
        "Pillow",
        "easyocr",
        "pytesseract"
    ]
    
    for package in optional_packages:
        try:
            print(f"üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è {package}...")
            subprocess.run([
                sys.executable, "-m", "pip", "install", 
                package, "--upgrade", "--no-cache-dir"
            ], check=True, capture_output=True)
            print(f"‚úÖ {package} –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ")
            
        except subprocess.CalledProcessError as e:
            print(f"‚ö†Ô∏è  –ù–µ –≤–¥–∞–ª–æ—Å—è –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ {package} (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–π): {e}")
            print("–ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ –±–µ–∑ —Ü—å–æ–≥–æ –ø–∞–∫–µ—Ç–∞...")

def check_system_requirements():
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î —Å–∏—Å—Ç–µ–º–Ω—ñ –≤–∏–º–æ–≥–∏"""
    print("üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–∏—Ö –≤–∏–º–æ–≥...")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –æ–ø–µ—Ä–∞—Ü—ñ–π–Ω—É —Å–∏—Å—Ç–µ–º—É
    system = platform.system()
    print(f"üñ•Ô∏è  –û–°: {system}")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä—É
    arch = platform.machine()
    print(f"üèóÔ∏è  –ê—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∞: {arch}")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å git
    try:
        subprocess.run(["git", "--version"], check=True, capture_output=True)
        print("‚úÖ Git –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    except (subprocess.CalledProcessError, FileNotFoundError):
        print("‚ö†Ô∏è  Git –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ (–Ω–µ –æ–±–æ–≤'—è–∑–∫–æ–≤–æ)")
    
    return True

def create_directories():
    """–°—Ç–≤–æ—Ä—é—î –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –ø–∞–ø–∫–∏"""
    print("üìÅ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –ø–∞–ø–æ–∫...")
    
    directories = [
        "data",
        "database", 
        "templates",
        "static",
        "temp",
        "uploads",
        "output"
    ]
    
    for directory in directories:
        if not os.path.exists(directory):
            try:
                os.makedirs(directory, exist_ok=True)
                print(f"‚úÖ –ü–∞–ø–∫–∞ {directory} —Å—Ç–≤–æ—Ä–µ–Ω–∞")
            except OSError as e:
                print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–∞–ø–∫–∏ {directory}: {e}")
                return False
        else:
            print(f"‚úÖ –ü–∞–ø–∫–∞ {directory} –≤–∂–µ —ñ—Å–Ω—É—î")
    
    return True

def create_virtual_environment():
    """–°—Ç–≤–æ—Ä—é—î –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ"""
    print("üêç –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞...")
    
    if os.path.exists("venv"):
        print("‚úÖ –í—ñ—Ä—Ç—É–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ –≤–∂–µ —ñ—Å–Ω—É—î")
        return True
    
    try:
        subprocess.run([sys.executable, "-m", "venv", "venv"], check=True)
        print("‚úÖ –í—ñ—Ä—Ç—É–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ —Å—Ç–≤–æ—Ä–µ–Ω–æ")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞: {e}")
        return False

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è"""
    print("üè• –í–°–¢–ê–ù–û–í–õ–ï–ù–ù–Ø –ú–ï–î–ò–ß–ù–û–ì–û –î–û–î–ê–¢–ö–£")
    print("=" * 50)
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ Python
    if not check_python_version():
        return 1
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å–∏—Å—Ç–µ–º–Ω—ñ –≤–∏–º–æ–≥–∏
    if not check_system_requirements():
        return 1
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –ø–∞–ø–∫–∏
    if not create_directories():
        return 1
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ
    if not create_virtual_environment():
        return 1
    
    # –û–Ω–æ–≤–ª—é—î–º–æ pip
    try:
        print("üîÑ –û–Ω–æ–≤–ª–µ–Ω–Ω—è pip...")
        subprocess.run([sys.executable, "-m", "pip", "install", "--upgrade", "pip"], 
                      check=True, capture_output=True)
        print("‚úÖ pip –æ–Ω–æ–≤–ª–µ–Ω–æ")
    except subprocess.CalledProcessError as e:
        print(f"‚ö†Ô∏è  –ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ pip: {e}")
    
    # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –æ—Å–Ω–æ–≤–Ω—ñ –ø–∞–∫–µ—Ç–∏
    if not install_core_packages():
        print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –æ—Å–Ω–æ–≤–Ω—ñ –ø–∞–∫–µ—Ç–∏")
        return 1
    
    # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ –ø–∞–∫–µ—Ç–∏
    install_optional_packages()
    
    print("\nüéâ –í–°–¢–ê–ù–û–í–õ–ï–ù–ù–Ø –ó–ê–í–ï–†–®–ï–ù–û!")
    print("=" * 50)
    print("üìã –ù–∞—Å—Ç—É–ø–Ω—ñ –∫—Ä–æ–∫–∏:")
    print("1. –î–æ–¥–∞–π—Ç–µ –ø–∞–ø–∫—É 'data/' –∑ Excel —Ñ–∞–π–ª–∞–º–∏")
    print("2. –ó–∞–ø—É—Å—Ç—ñ—Ç—å –¥–æ–¥–∞—Ç–æ–∫: python app.py")
    print("3. –í—ñ–¥–∫—Ä–∏–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä: http://127.0.0.1:5000")
    print("=" * 50)
    
    return 0

if __name__ == "__main__":
    sys.exit(main())
