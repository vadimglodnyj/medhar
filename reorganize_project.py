#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–µ–æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –ø—Ä–æ–µ–∫—Ç—É
"""

import os
import shutil
import logging

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def create_directories():
    """–°—Ç–≤–æ—Ä—é—î –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –ø–∞–ø–∫–∏"""
    directories = [
        'data',
        'templates',
        'static',
        'static/css',
        'static/js',
        'static/images',
        'utils',
        'tests',
        'docs',
        'backup',
        'temp'
    ]
    
    for directory in directories:
        if not os.path.exists(directory):
            os.makedirs(directory)
            logger.info(f"‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ –ø–∞–ø–∫—É: {directory}")
        else:
            logger.info(f"üìÅ –ü–∞–ø–∫–∞ –≤–∂–µ —ñ—Å–Ω—É—î: {directory}")

def move_files():
    """–ü–µ—Ä–µ–º—ñ—â—É—î —Ñ–∞–π–ª–∏ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ –ø–∞–ø–∫–∏"""
    
    # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª—ñ–≤ –¥–ª—è –ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è
    file_moves = [
        # –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö
        ('database.xlsx', 'data/database.xlsx'),
        ('treatments_2024.xlsx', 'data/treatments_2024.xlsx'),
        ('treatments_2025.xlsx', 'data/treatments_2025.xlsx'),
        
        # –®–∞–±–ª–æ–Ω–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤
        ('template.docx', 'templates/medical_characteristic_template.docx'),
        ('sluzhbova_kharakterystyka_template.docx.docx', 'templates/service_characteristic_template.docx'),
        ('raport_vlk_template.docx.docx', 'templates/vlk_report_template.docx'),
        
        # –£—Ç–∏–ª—ñ—Ç–∏
        ('database_reader.py', 'utils/database_reader.py'),
    ]
    
    logger.info("üì¶ –ü–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤...")
    
    for source, destination in file_moves:
        if os.path.exists(source):
            # –°—Ç–≤–æ—Ä—é—î–º–æ –ø–∞–ø–∫—É –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è —è–∫—â–æ –Ω–µ —ñ—Å–Ω—É—î
            dest_dir = os.path.dirname(destination)
            if dest_dir and not os.path.exists(dest_dir):
                os.makedirs(dest_dir)
            
            # –ü–µ—Ä–µ–º—ñ—â—É—î–º–æ —Ñ–∞–π–ª
            shutil.move(source, destination)
            logger.info(f"‚úÖ –ü–µ—Ä–µ–º—ñ—â–µ–Ω–æ: {source} ‚Üí {destination}")
        else:
            logger.warning(f"‚ö†Ô∏è –§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: {source}")

def clean_old_files():
    """–í–∏–¥–∞–ª—è—î —Å—Ç–∞—Ä—ñ —Ç–∞ –Ω–µ–≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω—ñ —Ñ–∞–π–ª–∏"""
    
    files_to_remove = [
        'app.py',  # –°—Ç–∞—Ä–∏–π –¥–æ–¥–∞—Ç–æ–∫
        'setup_project_structure.py',
        'run_setup.py',
        'reorganize_project.py'
    ]
    
    directories_to_remove = [
        'uploads',  # –°—Ç–∞—Ä–∞ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å PDF
        'tessdata',  # OCR –¥–∞–Ω—ñ
        '__pycache__'
    ]
    
    logger.info("üßπ –û—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö —Ñ–∞–π–ª—ñ–≤...")
    
    # –í–∏–¥–∞–ª—è—î–º–æ —Ñ–∞–π–ª–∏
    for file_path in files_to_remove:
        if os.path.exists(file_path):
            try:
                os.remove(file_path)
                logger.info(f"üóëÔ∏è –í–∏–¥–∞–ª–µ–Ω–æ —Ñ–∞–π–ª: {file_path}")
            except Exception as e:
                logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ñ–∞–π–ª—É {file_path}: {e}")
    
    # –í–∏–¥–∞–ª—è—î–º–æ –ø–∞–ø–∫–∏
    for dir_path in directories_to_remove:
        if os.path.exists(dir_path):
            try:
                shutil.rmtree(dir_path)
                logger.info(f"üóëÔ∏è –í–∏–¥–∞–ª–µ–Ω–æ –ø–∞–ø–∫—É: {dir_path}")
            except Exception as e:
                logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø–∞–ø–∫–∏ {dir_path}: {e}")

def rename_main_app():
    """–ü–µ—Ä–µ–π–º–µ–Ω–æ–≤—É—î app_new.py –≤ app.py"""
    if os.path.exists('app_new.py'):
        if os.path.exists('app.py'):
            os.remove('app.py')  # –í–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞—Ä–∏–π app.py
        os.rename('app_new.py', 'app.py')
        logger.info("‚úÖ –ü–µ—Ä–µ–π–º–µ–Ω–æ–≤–∞–Ω–æ app_new.py ‚Üí app.py")

def create_config_file():
    """–°—Ç–≤–æ—Ä—é—î —Ñ–∞–π–ª –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó"""
    config_content = '''# config.py
"""
–ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –ø—Ä–æ–µ–∫—Ç—É
"""

import os

# –®–ª—è—Ö–∏ –¥–æ –ø–∞–ø–æ–∫
BASE_DIR = os.path.dirname(os.path.abspath(__file__))
DATA_DIR = os.path.join(BASE_DIR, 'data')
TEMPLATES_DIR = os.path.join(BASE_DIR, 'templates')
STATIC_DIR = os.path.join(BASE_DIR, 'static')
TEMP_DIR = os.path.join(BASE_DIR, 'temp')

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
DATABASE_FILE = os.path.join(DATA_DIR, 'database.xlsx')
TREATMENTS_2024_FILE = os.path.join(DATA_DIR, 'treatments_2024.xlsx')
TREATMENTS_2025_FILE = os.path.join(DATA_DIR, 'treatments_2025.xlsx')

# –®–∞–±–ª–æ–Ω–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤
MEDICAL_CHARACTERISTIC_TEMPLATE = os.path.join(TEMPLATES_DIR, 'medical_characteristic_template.docx')
SERVICE_CHARACTERISTIC_TEMPLATE = os.path.join(TEMPLATES_DIR, 'service_characteristic_template.docx')
VLK_REPORT_TEMPLATE = os.path.join(TEMPLATES_DIR, 'vlk_report_template.docx')

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Flask
SECRET_KEY = 'your-secret-key-here'
DEBUG = True
'''
    
    with open('config.py', 'w', encoding='utf-8') as f:
        f.write(config_content)
    logger.info("‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ: config.py")

def create_gitignore():
    """–°—Ç–≤–æ—Ä—é—î .gitignore —Ñ–∞–π–ª"""
    gitignore_content = '''# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg

# Virtual Environment
venv/
env/
ENV/

# IDE
.vscode/
.idea/
*.swp
*.swo

# OS
.DS_Store
Thumbs.db

# Project specific
temp/
backup/
*.log
'''
    
    with open('.gitignore', 'w', encoding='utf-8') as f:
        f.write(gitignore_content)
    logger.info("‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ: .gitignore")

def print_final_structure():
    """–í–∏–≤–æ–¥–∏—Ç—å —Ñ—ñ–Ω–∞–ª—å–Ω—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç—É"""
    print("\n" + "="*60)
    print("üéâ –†–ï–û–†–ì–ê–ù–Ü–ó–ê–¶–Ü–Ø –ó–ê–í–ï–†–®–ï–ù–ê!")
    print("="*60)
    print("\nüìÅ –ù–æ–≤–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç—É:")
    print("""
medchar/
‚îú‚îÄ‚îÄ app.py                          # –ì–æ–ª–æ–≤–Ω–∏–π Flask –¥–æ–¥–∞—Ç–æ–∫
‚îú‚îÄ‚îÄ config.py                       # –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
‚îú‚îÄ‚îÄ requirements.txt                # –ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
‚îú‚îÄ‚îÄ README.md                       # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è
‚îú‚îÄ‚îÄ .gitignore                      # Git ignore
‚îÇ
‚îú‚îÄ‚îÄ data/                           # –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö —Ç–∞ Excel —Ñ–∞–π–ª–∏
‚îÇ   ‚îú‚îÄ‚îÄ database.xlsx              # –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—É
‚îÇ   ‚îú‚îÄ‚îÄ treatments_2024.xlsx       # –õ—ñ–∫—É–≤–∞–Ω–Ω—è 2024
‚îÇ   ‚îî‚îÄ‚îÄ treatments_2025.xlsx       # –õ—ñ–∫—É–≤–∞–Ω–Ω—è 2025
‚îÇ
‚îú‚îÄ‚îÄ templates/                      # –®–∞–±–ª–æ–Ω–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤
‚îÇ   ‚îú‚îÄ‚îÄ medical_characteristic_template.docx
‚îÇ   ‚îú‚îÄ‚îÄ service_characteristic_template.docx
‚îÇ   ‚îú‚îÄ‚îÄ vlk_report_template.docx
‚îÇ   ‚îî‚îÄ‚îÄ index.html                 # HTML —à–∞–±–ª–æ–Ω–∏
‚îÇ
‚îú‚îÄ‚îÄ generators/                     # –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤
‚îÇ   ‚îú‚îÄ‚îÄ __init__.py
‚îÇ   ‚îú‚îÄ‚îÄ base_generator.py
‚îÇ   ‚îú‚îÄ‚îÄ service_characteristic.py
‚îÇ   ‚îî‚îÄ‚îÄ vlk_report.py
‚îÇ
‚îú‚îÄ‚îÄ utils/                          # –î–æ–ø–æ–º—ñ–∂–Ω—ñ —É—Ç–∏–ª—ñ—Ç–∏
‚îÇ   ‚îî‚îÄ‚îÄ database_reader.py
‚îÇ
‚îú‚îÄ‚îÄ static/                         # –°—Ç–∞—Ç–∏—á–Ω—ñ —Ñ–∞–π–ª–∏
‚îÇ   ‚îú‚îÄ‚îÄ css/
‚îÇ   ‚îú‚îÄ‚îÄ js/
‚îÇ   ‚îî‚îÄ‚îÄ images/
‚îÇ
‚îú‚îÄ‚îÄ tests/                          # –¢–µ—Å—Ç–∏
‚îú‚îÄ‚îÄ docs/                           # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è
‚îú‚îÄ‚îÄ backup/                         # –†–µ–∑–µ—Ä–≤–Ω—ñ –∫–æ–ø—ñ—ó
‚îî‚îÄ‚îÄ temp/                           # –¢–∏–º—á–∞—Å–æ–≤—ñ —Ñ–∞–π–ª–∏
""")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —Ä–µ–æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó"""
    print("üèóÔ∏è –ü–æ—á–∞—Ç–æ–∫ —Ä–µ–æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –ø—Ä–æ–µ–∫—Ç—É...")
    print("="*60)
    
    try:
        # 1. –°—Ç–≤–æ—Ä—é—î–º–æ –ø–∞–ø–∫–∏
        create_directories()
        
        # 2. –ü–µ—Ä–µ–º—ñ—â—É—î–º–æ —Ñ–∞–π–ª–∏
        move_files()
        
        # 3. –ü–µ—Ä–µ–π–º–µ–Ω–æ–≤—É—î–º–æ –≥–æ–ª–æ–≤–Ω–∏–π –¥–æ–¥–∞—Ç–æ–∫
        rename_main_app()
        
        # 4. –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π–Ω—ñ —Ñ–∞–π–ª–∏
        create_config_file()
        create_gitignore()
        
        # 5. –û—á–∏—â–∞—î–º–æ —Å—Ç–∞—Ä—ñ —Ñ–∞–π–ª–∏
        clean_old_files()
        
        # 6. –í–∏–≤–æ–¥–∏–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print_final_structure()
        
        print("\n‚úÖ –†–µ–æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ!")
        print("üìù –ù–∞—Å—Ç—É–ø–Ω—ñ –∫—Ä–æ–∫–∏:")
        print("   1. –û–Ω–æ–≤–∏—Ç–∏ —ñ–º–ø–æ—Ä—Ç–∏ –≤ app.py")
        print("   2. –°—Ç–≤–æ—Ä–∏—Ç–∏ HTML —à–∞–±–ª–æ–Ω–∏ –¥–ª—è —Ñ–æ—Ä–º")
        print("   3. –ü—Ä–æ—Ç–µ—Å—Ç—É–≤–∞—Ç–∏ —Ä–æ–±–æ—Ç—É –¥–æ–¥–∞—Ç–∫—É")
        
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Ä–µ–æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó: {e}")
        raise

if __name__ == "__main__":
    main()

