#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–§—ñ–Ω–∞–ª—å–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ë–ê–£–¢–Ü–ù
"""

import sys
import os
import sqlite3
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from utils.medical_database import MedicalDatabase

def check_bautin_final():
    """–§—ñ–Ω–∞–ª—å–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ë–ê–£–¢–Ü–ù"""
    print("üîç –§—ñ–Ω–∞–ª—å–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ë–ê–£–¢–Ü–ù")
    print("=" * 80)
    
    db = MedicalDatabase()
    
    with sqlite3.connect(db.db_path) as conn:
        conn.row_factory = sqlite3.Row
        
        # 1. –ó–Ω–∞—Ö–æ–¥–∏–º–æ –ø–∞—Ü—ñ—î–Ω—Ç–∞
        print("1Ô∏è‚É£ –ü–û–®–£–ö –ü–ê–¶–Ü–Ñ–ù–¢–ê:")
        cursor = conn.execute('''
            SELECT id, full_name, rank, phone_number
            FROM patients 
            WHERE full_name LIKE '%–ë–ê–£–¢–Ü–ù%'
        ''')
        patient = cursor.fetchone()
        
        if not patient:
            print("‚ùå –ü–∞—Ü—ñ—î–Ω—Ç –ë–ê–£–¢–Ü–ù –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö")
            return
        
        print(f"‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –ø–∞—Ü—ñ—î–Ω—Ç–∞:")
        print(f"   ID: {patient['id']}")
        print(f"   –ü–Ü–ë: {patient['full_name']}")
        print(f"   –ó–≤–∞–Ω–Ω—è: {patient['rank']}")
        print(f"   –¢–µ–ª–µ—Ñ–æ–Ω: {patient['phone_number']}")
        
        # 2. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ª—ñ–∫—É–≤–∞–Ω–Ω—è
        print(f"\n2Ô∏è‚É£ –õ–Ü–ö–£–í–ê–ù–ù–Ø:")
        cursor = conn.execute('''
            SELECT t.id, t.episode_number, t.primary_hospitalization_date, 
                   t.discharge_date, t.hospital_place, t.treatment_type,
                   t.injury_date, t.is_combat, t.is_active,
                   d.preliminary_diagnosis, d.final_diagnosis
            FROM treatments t
            LEFT JOIN diagnoses d ON t.diagnosis_id = d.id
            WHERE t.patient_id = ?
            ORDER BY t.primary_hospitalization_date
        ''', (patient['id'],))
        
        treatments = cursor.fetchall()
        print(f"   –ó–Ω–∞–π–¥–µ–Ω–æ {len(treatments)} –∑–∞–ø–∏—Å—ñ–≤ –ª—ñ–∫—É–≤–∞–Ω–Ω—è:")
        
        for i, treatment in enumerate(treatments, 1):
            print(f"\n   üìã –õ—ñ–∫—É–≤–∞–Ω–Ω—è {i} (ID: {treatment['id']}):")
            print(f"      –ï–ø—ñ–∑–æ–¥: {treatment['episode_number']}")
            print(f"      –î–∞—Ç–∞ –ø–æ—á–∞—Ç–∫—É: {treatment['primary_hospitalization_date']}")
            print(f"      –î–∞—Ç–∞ –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è: {treatment['discharge_date']}")
            print(f"      –ú—ñ—Å—Ü–µ –ª—ñ–∫—É–≤–∞–Ω–Ω—è: {treatment['hospital_place']}")
            print(f"      –¢–∏–ø –ª—ñ–∫—É–≤–∞–Ω–Ω—è: {treatment['treatment_type']}")
            print(f"      –î–∞—Ç–∞ –ø–æ—Ä–∞–Ω–µ–Ω–Ω—è: {treatment['injury_date']}")
            print(f"      –ë–æ–π–æ–≤–∏–π —Å—Ç–∞—Ç—É—Å: {treatment['is_combat']} ({'–±–æ–π–æ–≤–∞' if treatment['is_combat'] else '–Ω–µ–±–æ–π–æ–≤–∞'})")
            print(f"      –ê–∫—Ç–∏–≤–Ω–∏–π: {treatment['is_active']}")
        
        # 3. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –æ–ø–ª–∞—Ç–∏
        print(f"\n3Ô∏è‚É£ –û–ü–õ–ê–¢–ò:")
        cursor = conn.execute('''
            SELECT id, payment_month, payment_year, total_treatment_days,
                   payment_date, diagnosis, payment_dates, raw_data
            FROM payments
            WHERE patient_id = ?
            ORDER BY payment_year, payment_month
        ''', (patient['id'],))
        
        payments = cursor.fetchall()
        print(f"   –ó–Ω–∞–π–¥–µ–Ω–æ {len(payments)} –∑–∞–ø–∏—Å—ñ–≤ –æ–ø–ª–∞—Ç:")
        
        if payments:
            for i, payment in enumerate(payments, 1):
                print(f"\n   üí∞ –û–ø–ª–∞—Ç–∞ {i} (ID: {payment['id']}):")
                print(f"      –ú—ñ—Å—è—Ü—å: {payment['payment_month']} {payment['payment_year']}")
                print(f"      –î–Ω—ñ –ª—ñ–∫—É–≤–∞–Ω–Ω—è: {payment['total_treatment_days']}")
                print(f"      –î–∞—Ç–∞ –æ–ø–ª–∞—Ç–∏: {payment['payment_date']}")
                print(f"      –î–∞—Ç–∏ –∑–∞–≥–∞–ª: {payment['payment_dates']}")
                print(f"      –î—ñ–∞–≥–Ω–æ–∑: {str(payment['diagnosis'])[:100]}...")
        else:
            print("   ‚ùå –û–ø–ª–∞—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ")
        
        # 4. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –±–∞–∑—ñ
        print(f"\n4Ô∏è‚É£ –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ë–ê–ó–ò –î–ê–ù–ò–•:")
        stats = db.get_database_stats()
        print(f"   –ü–∞—Ü—ñ—î–Ω—Ç—ñ–≤: {stats['patients_count']}")
        print(f"   –õ—ñ–∫—É–≤–∞–Ω—å: {stats['treatments_count']}")
        print(f"   –û–ø–ª–∞—Ç: {stats['payments_count']}")
        print(f"   –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª—ñ–≤: {stats['units_count']}")

if __name__ == "__main__":
    check_bautin_final()

